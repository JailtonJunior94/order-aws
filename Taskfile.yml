version: '3'

tasks:
  start:localstack:
    desc: Start Docker Compose services
    cmds:
    - docker-compose -f deployment/docker-compose.yml up -d

  stop:localstack:
    desc: Stop Docker Compose services
    cmds:
    - docker-compose -f deployment/docker-compose.yml down

  terraform:init:
    desc: Initialize Terraform
    dir: deployment/iac
    cmds:
    - terraform init

  terraform:plan:
    desc: Terraform plan
    dir: deployment/iac
    cmds:
    - terraform plan

  terraform:apply:
    desc: Terraform apply
    dir: deployment/iac
    cmds:
    - terraform apply -auto-approve

  terraform:destroy:
    desc: Terraform destroy
    dir: deployment/iac
    cmds:
    - terraform destroy -auto-approve

  dotenv:
    desc: Generate .env file
    cmds:
    - cp cmd/.env.example cmd/.env

  build:
    desc: Compiling Order...
    cmds:
    - CGO_ENABLED=0 go build -ldflags="-w -s" -o ./bin/order ./cmd/main.go

  zip:lambda:
    desc: Upload lambda
    cmds:
    - rm -rf ./bin/{*,.*}
    - CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -o ./bin/bootstrap ./cmd/lambdas/presign.go
    - cd ./bin && zip presign.zip bootstrap
    - cd ./bin && chmod 644 presign.zip

  lint:
    desc: Run linters
    cmds:
    - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.2.1
    - GOGC=20 golangci-lint run --config .golangci.yml ./...

  vulncheck:
    desc: Running vulnerability check...
    cmds:
    - go install golang.org/x/vuln/cmd/govulncheck@latest
    - govulncheck ./...

  mocks:
    desc: Generating mocks...
    cmds:
    - go install github.com/vektra/mockery/v3@v3.5.0
    - mockery

  test:
    desc: Running tests...
    cmds:
    - go test -count=1 -race -covermode=atomic -coverprofile=coverage.out ./...

  coverage:
    desc: Generating coverage report...
    cmds:
    - go tool cover -html=coverage.out
